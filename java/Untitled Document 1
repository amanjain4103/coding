// { Driver Code Starts
//Initial Template for Java

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;
class GFG {
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
		
		int t=sc.nextInt();
		
		while(t-->0)
		{
		    int n=sc.nextInt();
		    
		    int arr[]=new int[n];
		    
		    for(int i=0;i<n;i++)
		    arr[i]=sc.nextInt();
		    
		    int k=sc.nextInt();
		    
		    System.out.println(kthSmallest(arr, 0, n-1, k));
		}
	}
	

    
 // } Driver Code Ends


//User function Template for Java

public static int partition(int[] arr, int l, int r) {
    
    int s=l-1;
    int pivot = arr[r];
    
    for(int i=l; i<r; i++) {

        if(arr[i] < pivot) {
            if(i>s) {
                int temp = arr[s+1];
                arr[s+1] = arr[i];
                arr[i] = temp;
            }
            s++;
        }
        
    }
    
    // putting pivot into middle
    int tempForPivot = arr[r];
    arr[r] = arr[s+1];
    arr[s+1] = tempForPivot;

    return s+1;
    
}

public static int kthSmallest(int[] arr, int l, int r, int k) 
{
    //Your code here
    // if(l==r) {
    //     return arr[l];
    // }
    
    int newPivotIndex = partition(arr, l, r);
    // System.out.println(newPivotIndex);
    // return arr[newPivotIndex];
    
    if(newPivotIndex == (k-1)) {
        return arr[newPivotIndex];
    }else if((k-1) < newPivotIndex) {
        return kthSmallest(arr, l, (newPivotIndex-1), k);
    }else {
        return kthSmallest( arr, (newPivotIndex+1), r, k);
    }
    
    
} 


// { Driver Code Starts.


}
  // } Driver Code Ends
